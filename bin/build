#!/bin/bash

set -ex

VERSION=`./bin/version`
NODE_VERSION=7.5.0

if [ $# -ne 2 ]; then
  echo "USAGE: ./bin/build PLATFORM CHANNEL"
  exit 1
fi

PLATFORM=$1
CHANNEL=$2

# setup workspace
HEROKU_BASE=heroku-v$VERSION-$PLATFORM
WORKSPACE=tmp/build/$HEROKU_BASE
rm -rf $WORKSPACE
mkdir -p $WORKSPACE/node_modules
cp README.md $WORKSPACE
cp LICENSE $WORKSPACE
cp package.json $WORKSPACE
cp yarn.lock $WORKSPACE
cp cli.js $WORKSPACE
cp -r lib $WORKSPACE

# install node
NODE_BASE=node-v$NODE_VERSION-$PLATFORM
if [ ! -f tmp/$NODE_BASE.tar.xz ]; then
  curl -fSLo tmp/$NODE_BASE.tar.xz https://nodejs.org/dist/v$NODE_VERSION/$NODE_BASE.tar.xz
fi
tar -C $WORKSPACE -xf tmp/$NODE_BASE.tar.xz
mv $WORKSPACE/$NODE_BASE $WORKSPACE/node

# install packages
cd $WORKSPACE
yarn install --offline --no-progress --production

echo $VERSION > VERSION
echo $CHANNEL > CHANNEL

# create bin runner
cat << EOF > heroku
#!/usr/bin/env bash
set -e
get_script_dir () {
	SOURCE="\${BASH_SOURCE[0]}"
	# While \$SOURCE is a symlink, resolve it
	while [ -h "\$SOURCE" ]; do
		DIR="\$( cd -P "\$( dirname "\$SOURCE" )" && pwd )"
		SOURCE="\$( readlink "\$SOURCE" )"
		# If \$SOURCE was a relative symlink (so no "/" as prefix, need to resolve it relative to the symlink base directory
		[[ \$SOURCE != /* ]] && SOURCE="\$DIR/\$SOURCE"
	done
	DIR="\$( cd -P "\$( dirname "\$SOURCE" )" && pwd )"
	echo "\$DIR"
}
XDG_DATA_HOME=\${XDG_DATA_HOME:="\$HOME/.local/share"}
if [ -x \$XDG_DATA_HOME/heroku/jscli/heroku ]; then
  \$XDG_DATA_HOME/heroku/jscli/heroku \$*
else
  DIR=\$(get_script_dir)
  \$DIR/node/bin/node --harmony-async-await --use_strict \$DIR/cli.js $*
fi
EOF
chmod +x heroku

# create tarball
cd ..
tar czf $HEROKU_BASE.tar.gz $HEROKU_BASE

SHA256=`shasum -a 256 $HEROKU_BASE.tar.gz | awk {'print \$1'}`
cat << EOF > $PLATFORM
{
  "version": "$VERSION",
  "sha256": "$SHA256"
}
EOF

cd ../..
